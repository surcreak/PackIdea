apply plugin: 'com.android.library'
apply plugin: 'dagger.hilt.android.plugin'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion build_versions.target_sdk
    buildToolsVersion build_versions.build_tools

    defaultConfig {
        minSdkVersion build_versions.min_sdk
        targetSdkVersion build_versions.target_sdk
        versionCode build_versions.version_code
        versionName build_versions.version_name

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'
    }
}

kapt {
    useBuildCache = true
    arguments {
        arg("AROUTER_MODULE_NAME", project.getName())
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    testImplementation deps.junit
    androidTestImplementation deps.atsl.runner
    androidTestImplementation deps.espresso.core

    api deps.kotlin.stdlib
    api deps.androidx_core
    api deps.lifecycle.viewmodel_ktx
    api deps.lifecycle.extensions
    api deps.support.app_compat
    api deps.gson.runtime

    // refresh_layout
    api deps.refresh_layout.kernel
    api deps.refresh_layout.header_classics

    api deps.retrofit.runtime
    api deps.retrofit.gson
    api deps.retrofit.adapter_coroutines

    api deps.constraint_layout
    api deps.androidx_core
    api deps.kotlin.stdlib
    api deps.lifecycle.viewmodel_ktx

    api deps.adapterHelper

    // hilt
    api deps.hilt.hilt_android
    kapt deps.hilt.hilt_android_compiler

    // navigation
    api deps.navigation.fragment_ktx
    api deps.navigation.ui_ktx

    // coroutines
    api deps.coroutines.core
}
