/*
 * Copyright (C) 2018 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Shared file between builds so that they can all use the same dependencies and
 * maven repositories.
 **/



def build_versions = [:]
build_versions.min_sdk = 21
build_versions.target_sdk = 28
build_versions.build_tools = "28.0.3"
build_versions.version_code = 1000
build_versions.version_name = "1.0.0"
ext.build_versions = build_versions

//定义版本号
ext.versions = [:]
def versions = [:]

versions.arch_core = "2.1.0"
versions.room = "2.2.5"
versions.lifecycle = "2.2.0"
versions.support = "1.2.0"
versions.dagger = "2.29.1"
versions.junit = "4.12"
versions.espresso = "3.1.0-alpha4"
versions.retrofit = "2.9.0"
versions.okhttp_logging_interceptor = "3.11.0"
versions.mockwebserver = "3.8.1"
versions.apache_commons = "2.5"
versions.mockito = "2.7.19"
versions.mockito_all = "1.10.19"
versions.mockito_android = "2.22.0"
versions.dexmaker = "2.2.0"
versions.constraint_layout = "2.0.0-alpha2"
versions.glide = "4.8.0"
versions.timber = "4.5.1"
versions.android_gradle_plugin = '4.0.1'
versions.rxjava2 = "2.1.3"
versions.rx_android = "2.0.1"
versions.atsl_runner = "1.1.0-alpha4"
versions.atsl_rules = "1.1.0-alpha4"
versions.hamcrest = "1.3"
versions.kotlin = "1.4.10"
versions.coroutines = "1.3.9"
versions.paging = "3.0.0-alpha02"
versions.navigation = "2.3.0"
versions.work = "1.0.0-alpha11"
versions.gson = "2.8.5"
versions.eventbus = "3.0.0"
versions.tracker2 = "3.3.0"
versions.lottie = "2.2.0"
versions.packerng = "2.0.1"
versions.multidex = "2.0.0"
versions.viewpager_indicator = "2.4.1"
versions.svga_play = "2.4.4"
versions.exo_play = "2.9.6"
versions.jsbridge = "1.0.4"
versions.statusbar_util = "1.5.1"
versions.smart_refresh_layout = "2.0.1"
versions.wheelpicker = "1.1.2"
versions.rx_lifecycle = "2.1.0"
versions.track = "1.2.3"
versions.androidx_core = "1.3.1"
versions.collection_ktx = "1.1.0"
versions.retrofit2_kotlin_coroutines_adapter = "0.9.2"
versions.adapterHelper = "3.0.4"
versions.leakcanary = "1.6.2"
versions.hilt = "2.28-alpha"
versions.hilt_lifecycle = "1.0.0-alpha01"
versions.viewpager2 = "1.1.0-alpha01"
ext.versions = versions

//定义库
ext.deps = [:]
def deps = [:]

def support = [:]
support.annotations = "androidx.annotation:annotation:$versions.support"
support.app_compat = "androidx.appcompat:appcompat:$versions.support"
support.recyclerview = "androidx.recyclerview:recyclerview:$versions.support"
support.cardview = "androidx.cardview:cardview:$versions.support"
support.design = "com.google.android.material:material:$versions.support"
support.v4 = "androidx.legacy:legacy-support-v4:$versions.support"
support.core_utils = "androidx.legacy:legacy-support-core-utils:$versions.support"
deps.support = support

def room = [:]
room.runtime = "androidx.room:room-runtime:$versions.room"
room.compiler = "androidx.room:room-compiler:$versions.room"
room.rxjava2 = "androidx.room:room-rxjava2:$versions.room"
room.coroutines = "androidx.room:room-coroutines:$versions.room"
room.testing = "androidx.room:room-testing:$versions.room"
deps.room = room

def lifecycle = [:]
lifecycle.runtime = "androidx.lifecycle:lifecycle-runtime:$versions.lifecycle"
lifecycle.extensions = "androidx.lifecycle:lifecycle-extensions:$versions.lifecycle"
lifecycle.java8 = "androidx.lifecycle:lifecycle-common-java8:$versions.lifecycle"
lifecycle.viewmodel_ktx = "androidx.lifecycle:lifecycle-viewmodel-ktx:$versions.lifecycle"
lifecycle.livedata = "android.arch.lifecycle:livedata:$versions.lifecycle"
lifecycle.compiler = "androidx.lifecycle:lifecycle-compiler:$versions.lifecycle"
deps.lifecycle = lifecycle

def arch_core = [:]
arch_core.testing = "androidx.arch.core:core-testing:$versions.arch_core"
deps.arch_core = arch_core

def retrofit = [:]
retrofit.runtime = "com.squareup.retrofit2:retrofit:$versions.retrofit"
retrofit.gson = "com.squareup.retrofit2:converter-gson:$versions.retrofit"
retrofit.adapter_rxjava2 = "com.squareup.retrofit2:adapter-rxjava2:$versions.retrofit"
retrofit.mock = "com.squareup.retrofit2:retrofit-mock:$versions.retrofit"
retrofit.adapter_coroutines = "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:$versions.retrofit2_kotlin_coroutines_adapter"
deps.retrofit = retrofit

def espresso = [:]
espresso.core = "androidx.test.espresso:espresso-core:$versions.espresso"
espresso.contrib = "androidx.test.espresso:espresso-contrib:$versions.espresso"
espresso.intents = "androidx.test.espresso:espresso-intents:$versions.espresso"
deps.espresso = espresso

def atsl = [:]
atsl.runner = "androidx.test:runner:$versions.atsl_runner"
atsl.rules = "androidx.test:rules:$versions.atsl_runner"
deps.atsl = atsl

def mockito = [:]
mockito.core = "org.mockito:mockito-core:$versions.mockito"
mockito.all = "org.mockito:mockito-all:$versions.mockito_all"
mockito.android = "org.mockito:mockito-android:$versions.mockito_android"
deps.mockito = mockito

def kotlin = [:]
kotlin.stdlib = "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$versions.kotlin"
kotlin.test = "org.jetbrains.kotlin:kotlin-test-junit:$versions.kotlin"
kotlin.plugin = "org.jetbrains.kotlin:kotlin-gradle-plugin:$versions.kotlin"
kotlin.allopen = "org.jetbrains.kotlin:kotlin-allopen:$versions.kotlin"
deps.kotlin = kotlin

def coroutines = [:]
coroutines.core = "org.jetbrains.kotlinx:kotlinx-coroutines-core:$versions.coroutines"
coroutines.android = "org.jetbrains.kotlinx:kotlinx-coroutines-android:$versions.coroutines"
coroutines.rx2 = "org.jetbrains.kotlinx:kotlinx-coroutines-rx2:$versions.coroutines"
deps.coroutines = coroutines

def arouter = [:]
arouter.api = "com.alibaba:arouter-api:1.4.1"
arouter.compiler = "com.alibaba:arouter-compiler:1.2.1"
deps.arouter = arouter

def gson = [:]
gson.runtime = "com.google.code.gson:gson:$versions.gson"
deps.gson = gson

def glide = [:]
glide.runtime = "com.github.bumptech.glide:glide:$versions.glide"
glide.compiler = "com.github.bumptech.glide:compiler:$versions.glide"
glide.glide_annotations = "com.github.bumptech.glide:annotations:$versions.glide"
glide.glide_okhttp3_integration = "com.github.bumptech.glide:okhttp3-integration:$versions.glide"
deps.glide = glide

def work = [:]
work.runtime = "android.arch.work:work-runtime:$versions.work"
work.testing = "android.arch.work:work-testing:$versions.work"
work.firebase = "android.arch.work:work-firebase:$versions.work"
work.runtime_ktx = "android.arch.work:work-runtime-ktx:$versions.work"
deps.work = work

def navigation = [:]
navigation.fragment = "androidx.navigation:navigation-fragment:$versions.navigation"
navigation.ui = "androidx.navigation:navigation-ui:$versions.navigation"
navigation.fragment_ktx = "androidx.navigation:navigation-fragment-ktx:$versions.navigation"
navigation.ui_ktx = "androidx.navigation:navigation-ui-ktx:$versions.navigation"
navigation.dynamic_features_fragment = "androidx.navigation:navigation-dynamic-features-fragment:$versions.navigation"
navigation.testing = "androidx.navigation:navigation-testing:$versions.navigation"
deps.navigation = navigation

def refresh_layout=[:]
refresh_layout.kernel = "com.scwang.smart:refresh-layout-kernel:$versions.smart_refresh_layout"
refresh_layout.header_classics = "com.scwang.smart:refresh-header-classics:$versions.smart_refresh_layout"
refresh_layout.header_radar = "com.scwang.smart:refresh-header-radar:$versions.smart_refresh_layout"
refresh_layout.header_falsify = "com.scwang.smart:refresh-header-falsify:$versions.smart_refresh_layout"
refresh_layout.header_material = "com.scwang.smart:refresh-header-material:$versions.smart_refresh_layout"
refresh_layout.header_two_level = "com.scwang.smart:refresh-header-two-level:$versions.smart_refresh_layout"
refresh_layout.header_footer_ball = "com.scwang.smart:refresh-footer-ball:$versions.smart_refresh_layout"
refresh_layout.header_footer_classics = "com.scwang.smart:refresh-footer-classics:$versions.smart_refresh_layout"
deps.refresh_layout = refresh_layout

def dagger = [:]
dagger.runtime = "com.google.dagger:dagger:$versions.dagger"
dagger.android = "com.google.dagger:dagger-android:$versions.dagger"
dagger.android_support = "com.google.dagger:dagger-android-support:$versions.dagger"
dagger.compiler = "com.google.dagger:dagger-compiler:$versions.dagger"
dagger.android_support_compiler = "com.google.dagger:dagger-android-processor:$versions.dagger"
deps.dagger = dagger

def hilt = [:]
hilt.android = "com.google.dagger:hilt-android:$versions.hilt"
hilt.android_compiler = "com.google.dagger:hilt-android-compiler:$versions.hilt"
deps.hilt = hilt

def hilt_lifecycle = [:]
hilt_lifecycle.lifecycle_viewmodel = "androidx.hilt:hilt-lifecycle-viewmodel:$versions.hilt_lifecycle"
hilt_lifecycle.compiler = "androidx.hilt:hilt-compiler:$versions.hilt_lifecycle"
deps.hilt_lifecycle = hilt_lifecycle

def paging = [:]
paging.paging_runtime = "androidx.paging:paging-runtime:$versions.paging"
paging.paging_common = "androidx.paging:paging-common:$versions.paging"
paging.paging_rxjava2 = "androidx.paging:paging-rxjava2:$versions.paging"
deps.paging = paging


//其他库
deps.androidx_core = "androidx.core:core-ktx:$versions.androidx_core"
deps.collection_ktx = "androidx.collection:collection-ktx:$versions.collection_ktx"
deps.eventbus = "org.greenrobot:eventbus:$versions.eventbus"
deps.trackerNew = "com.zhangmen.track:track-android:$versions.track"
deps.tracker2 = "com.zhangmen.tracker2.am:core:$versions.tracker2"
deps.rxpermissions = "com.tbruyelle.rxpermissions2:rxpermissions:0.9.4@aar"
deps.packerng_helper = "com.mcxiaoke.packer-ng:helper:$versions.packerng"
deps.packerng_plugin = "com.mcxiaoke.packer-ng:plugin:$versions.packerng"
deps.multidex = "androidx.multidex:multidex:$versions.multidex"
deps.dexmaker = "com.linkedin.dexmaker:dexmaker-mockito:$versions.dexmaker"
deps.constraint_layout = "androidx.constraintlayout:constraintlayout:$versions.constraint_layout"
deps.timber = "com.jakewharton.timber:timber:$versions.timber"
deps.junit = "junit:junit:$versions.junit"
deps.mock_web_server = "com.squareup.okhttp3:mockwebserver:$versions.mockwebserver"
deps.rxjava2 = "io.reactivex.rxjava2:rxjava:$versions.rxjava2"
deps.rx_android = "io.reactivex.rxjava2:rxandroid:$versions.rx_android"
deps.rx_lifecycle2 = "com.trello.rxlifecycle2:rxlifecycle-components:$versions.rx_lifecycle"
deps.hamcrest = "org.hamcrest:hamcrest-all:$versions.hamcrest"
deps.android_gradle_plugin = "com.android.tools.build:gradle:$versions.android_gradle_plugin"
deps.viewpager_indicator = "com.github.JakeWharton:ViewPagerIndicator:$versions.viewpager_indicator"
deps.svga_play = "com.github.yyued:SVGAPlayer-Android:$versions.svga_play"
deps.exo_play = "com.google.android.exoplayer:exoplayer:$versions.exo_play"
deps.jsbridge = "com.github.lzyzsd:jsbridge:$versions.jsbridge"
deps.statusbar_util = "com.jaeger.statusbarutil:library:$versions.statusbar_util"
deps.wheelpicker = "cn.aigestudio.wheelpicker:WheelPicker:$versions.wheelpicker"
deps.okhttp_logging_interceptor = "com.squareup.okhttp3:logging-interceptor:${versions.okhttp_logging_interceptor}"
deps.adapterHelper = "com.github.CymChad:BaseRecyclerViewAdapterHelper:$versions.adapterHelper"
deps.leakcanary = "com.squareup.leakcanary:leakcanary-android:$versions.leakcanary"
deps.viewpager2 = "androidx.viewpager2:viewpager2:$versions.viewpager2"
ext.deps = deps

static def addRepos(RepositoryHandler handler) {
    handler.google()
    handler.jcenter()
    handler.mavenCentral()
    handler.maven { url "https://maven.google.com" }
    handler.maven { url 'https://jitpack.io' }
    handler.maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
    handler.maven { url 'http://maven.aliyun.com/nexus/content/repositories/jcenter'}
    handler.maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
    handler.maven { url 'https://dl.bintray.com/umsdk/release' }
    handler.maven { url 'http://maven.aliyun.com/nexus/content/repositories/releases/' }
}
ext.addRepos = this.&addRepos