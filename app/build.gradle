apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-allopen'
apply plugin: 'packer'

android {
    compileSdkVersion build_versions.target_sdk
    buildToolsVersion build_versions.build_tools
    defaultConfig {
        applicationId "com.surcreak.packidea"
        minSdkVersion build_versions.min_sdk
        targetSdkVersion build_versions.target_sdk
        versionCode build_versions.version_code
        versionName build_versions.version_name
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        flavorDimensions "qa"
    }

    signingConfigs {
        debug {
            storeFile file("surcreak_debug.jks")
            storePassword "surcreak.com"
            keyAlias "com.surcreak"
            keyPassword "surcreak.com"
            v2SigningEnabled true
        }

        release {
            storeFile file("surcreak_debug.jks")
            storePassword "surcreak.com"
            keyAlias "com.surcreak"
            keyPassword "surcreak.com"
            v2SigningEnabled true
        }
    }

    buildTypes {
        debug {
            // 如果没有提供混淆规则文件，则设置默认的混淆规则文件（SDK/tools/proguard/proguard-android.txt）
            pseudoLocalesEnabled true
            // 显示Log
            buildConfigField "boolean", "LOG_DEBUG", "true"
            //混淆
            minifyEnabled false
            //Zipalign优化
            zipAlignEnabled false
            // 移除无用的resource文件
            shrinkResources false
            //加载默认混淆配置文件
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            //签名
            signingConfig signingConfigs.debug
        }

        release {
            // 如果没有提供混淆规则文件，则设置默认的混淆规则文件（SDK/tools/proguard/proguard-android.txt）
            pseudoLocalesEnabled true
            // 不显示Log
            buildConfigField "boolean", "LOG_DEBUG", "false"
            //混淆
            minifyEnabled true
            //Zipalign优化
            zipAlignEnabled true
            // 移除无用的resource文件
            shrinkResources true
            //加载默认混淆配置文件
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            //签名
            signingConfig signingConfigs.release
        }
    }

    lintOptions {
        tasks.lint.enabled = false
    }

    kapt {
        correctErrorTypes = true
    }

    productFlavors {
        qa {}
        uat {}
        online {}
    }
}

kapt {
    useBuildCache = true
    arguments {
        arg("AROUTER_MODULE_NAME", project.getName())
    }
}

packer {
    archiveNameFormat = 'packidea-{versionName}_${channel}_${buildTime}_${buildType}'
    channelFile = new File(project.rootDir, "market.txt")
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    testImplementation deps.junit
    androidTestImplementation deps.atsl.runner
    androidTestImplementation deps.espresso.core
    //kapt deps.arouter.compiler
    implementation deps.multidex

    implementation deps.androidx_core
    implementation deps.support.app_compat

    implementation project(':libs:base')
    implementation project(':modules:mainpage')
    implementation project(':modules:homepage')
}
